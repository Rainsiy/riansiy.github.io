[{"id":"f5f026251c3ebc2fbc9e8c1b4198abf4","title":"V2Board前端搭建教程","content":"前言V2Board是一个GitHub开源项目，它是什么我就不过多介绍了，懂的都懂！\n\n\n\n\n\n\n\n\n\n部分步骤参考V2Board的相关链接《GitHub:V2Board》、《V2Board使用手册》。\n在Debian11上安装V2Board一、安装和配置宝塔面板1.安装宝塔面板aaPanel是宝塔(bt.cn)的国际版本你可以在宝塔面板或者aaPanel选择你所使用的系统的安装命令，本文章采用Debian和宝塔面板。\n#安装宝塔面板 选其一\n$ wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh ed8484bec\n#安装aaPanel 选其一\n$ wget -O install.sh http://www.aapanel.com/script/install-ubuntu_6.0_en.sh &amp;&amp; bash install.sh aapanel\n\n终端执行演示\nroot@debian:~# wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh ed8484bec #宝塔面板\n--2022-07-18 20:11:43--  http://download.bt.cn/install/install-ubuntu_6.0.sh\nResolving download.bt.cn (download.bt.cn)... 116.213.43.206, 240e:a5:4200:89::256\nConnecting to download.bt.cn (download.bt.cn)|116.213.43.206|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 29592 (29K) [application/octet-stream]\nSaving to: ‘install.sh’\n\ninstall.sh                                                100%[====================================================================================================================================>]  28.90K  --.-KB/s    in 0.005s  \n\n2022-07-18 20:11:43 (6.26 MB/s) - ‘install.sh’ saved [29592/29592]\n\ncat: /etc/redhat-release: No such file or directory\n\n+----------------------------------------------------------------------\n| Bt-WebPanel FOR CentOS/Ubuntu/Debian\n+----------------------------------------------------------------------\n| Copyright © 2015-2099 BT-SOFT(http://www.bt.cn) All rights reserved.\n+----------------------------------------------------------------------\n| The WebPanel URL will be http://SERVER_IP:8888 when installed.\n+----------------------------------------------------------------------\n\nDo you want to install Bt-Panel to the /www directory now?(y/n): y\n---------------------------------------------\nSelected download node...\nDownload node: http://36.133.1.8:5880\n---------------------------------------------\n...省略\n==================================================================\nCongratulations! Installed successfully!\n==================================================================\n外网面板地址: http://192.168.1.1:8888/1d6e9fe7\n内网面板地址: http://10.0.1.1:8888/1d6e9fe7\nusername: admin\npassword: admin\nIf you cannot access the panel,\nrelease the following panel port [8888] in the security group\n若无法访问面板，请检查防火墙/安全组是否有放行面板[8888]端口\n==================================================================\nTime consumed: 1 Minute!\n\n\n如何卸载宝塔面板\n$ wget http://download.bt.cn/install/bt-uninstall.sh\n$ sh bt-uninstall.sh\n\n安装完成后我们登陆 宝塔面板(或者aaPanel) 进行环境的安装。选择使用LNMP的环境安装方式勾选如下信息☑️ Nginx 1.17 (可以选择最新版)☑️ MySQL 5.6☑️ PHP 7.4\n选择编译安装。(也可以选择极速安装，取决于你。)\n2.阻止宝塔收集信息并上传\n\n\n\n\n\n\n\n\n感谢阻止宝塔收集信息并上传的脚本作者 项目地址 -&gt; 点这里\n$ wget https://raw.githubusercontent.com/jamespan2012/myshellscripts/main/fuck-bt-site-task.sh -O fuck-bt-site-task.sh &amp;&amp; bash fuck-bt-site-task.sh\n\n终端执行演示\nroot@debian:~# wget https://raw.githubusercontent.com/jamespan2012/myshellscripts/main/fuck-bt-site-task.sh -O fuck-bt-site-task.sh &amp;&amp; bash fuck-bt-site-task.sh\n--2022-07-18 21:09:58--  https://raw.githubusercontent.com/jamespan2012/myshellscripts/main/fuck-bt-site-task.sh\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.109.133, 185.199.110.133, 185.199.111.133, ...\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.109.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 1823 (1.8K) [text/plain]\nSaving to: ‘fuck-bt-site-task.sh’\n\nfuck-bt-site-task.sh                                      100%[====================================================================================================================================>]   1.78K  --.-KB/s    in 0s      \n\n2022-07-18 21:09:59 (29.2 MB/s) - ‘fuck-bt-site-task.sh’ saved [1823/1823]\n\n\n#======================================\n# Project: fuck-bt-site-task\n# Version: 0.0.1\n# 推荐机场:   垃圾场加速器\n# 注册地址:   https://lajichang.eu/#/register?code=68NY1XOw\n#======================================\n\n[Info] 选择功能(退出脚本:Ctrl+c): \n1.启用并备份\n2.恢复初始状态\n输入数字以选择:1\n\n\n3.安装Redis、fileinfo宝塔面板 &gt; 软件商店 &gt; 找到PHP7.4 点击设置 &gt; 安装扩展 &gt; redis,fileinfo 进行安装。\n4.解除被禁止的函数宝塔面板 &gt; 软件商店 &gt; 找到PHP7.4 点击设置 &gt; 禁用函数 &gt; 将 putenv、proc_open、pcntl_alarm、pcntl_signal 从列表中删除。\n5.添加站点宝塔面板 &gt; 网站 &gt; 添加站点。\n\n在 域名 填入你指向服务器的域名\n在 数据库 选择MySQL\n在 PHP版本 选择PHP-74\n\n6.开启SSL宝塔面板 &gt; 网站 &gt; 找到你的站点 点击设置 &gt; SSL &gt; Let’s Encrypt\n\n在 验证方式 选文件验证\n在 域名 选择你的域名\n点击申请 成功后 开启 强制HTTPS\n\n7.安装V2Board通过SSH登录到服务器后访问站点路径如：&#x2F;www&#x2F;wwwroot&#x2F;你的站点域名。以下命令都需要在站点目录进行执行。\n$ cd /www/wwwroot/你的站点域名\n# 删除目录下文件\n$ chattr -i .user.ini\n$ rm -rf .htaccess 404.html index.html .user.ini\n$ rm -rf .well-known/\n\n终端执行演示\nroot@debian:~# cd /www/wwwroot/你的站点域名\nroot@debian:/www/wwwroot/你的站点域名# chattr -i .user.ini\nroot@debian:/www/wwwroot/你的站点域名# rm -rf .htaccess 404.html index.html .user.ini\nroot@debian:/www/wwwroot/你的站点域名# rm -rf .well-known/\n\n\n执行命令从 Github 克隆到当前目录。\n$ git clone https://github.com/v2board/v2board.git ./\n\n终端执行演示\nroot@debian:/www/wwwroot/你的站点域名# git clone https://github.com/v2board/v2board.git ./\nCloning into '.'...\nremote: Enumerating objects: 16891, done.\nremote: Counting objects: 100% (696/696), done.\nremote: Compressing objects: 100% (274/274), done.\nremote: Total 16891 (delta 442), reused 635 (delta 403), pack-reused 16195\nReceiving objects: 100% (16891/16891), 33.88 MiB | 16.70 MiB/s, done.\nResolving deltas: 100% (12149/12149), done.\n\n\n执行命令安装依赖包以及V2board\n$ sh init.sh\n\n详细安装步骤\nroot@debian:/www/wwwroot/你的站点域名# sh init.sh\n--2022-07-18 21:35:06--  https://github.com/composer/composer/releases/latest/download/composer.phar\nResolving github.com (github.com)... 20.205.243.166\nConnecting to github.com (github.com)|20.205.243.166|:443... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: https://github.com/composer/composer/releases/download/2.3.10/composer.phar [following]\n--2022-07-18 21:35:06--  https://github.com/composer/composer/releases/download/2.3.10/composer.phar\nReusing existing connection to github.com:443.\nHTTP request sent, awaiting response... 302 Found\n...省略\n2022-07-18 21:35:08 (12.4 MB/s) - ‘composer.phar’ saved [2722254/2722254]\n\nRunning 2.3.10 (2022-07-13 15:48:23) with PHP 7.4.30 on Linux / 5.10.0-12-amd64\nDo not run Composer as root/super user! See https://getcomposer.org/root for details\nContinue as root/super user [yes]? yes\n...省略\n__     ______  ____                      _  \n\\ \\   / /___ \\| __ )  ___   __ _ _ __ __| | \n \\ \\ / /  __) |  _ \\ / _ \\ / _` | '__/ _` | \n  \\ V /  / __/| |_) | (_) | (_| | | | (_| | \n   \\_/  |_____|____/ \\___/ \\__,_|_|  \\__,_| \n\n 请输入数据库地址（默认:localhost） [localhost]:\n > localhost\n 请输入数据库名:\n > 你的数据库名\n 请输入数据库用户名:\n > 你的用户名\n 请输入数据库密码:\n > 你的密码\n 正在导入数据库请稍等...\n数据库导入完成\n 请输入管理员邮箱?:\n > 你的邮箱\n 请输入管理员密码?:\n > 你的密码\n 一切就绪\n访问 http(s)://你的站点/admin 进入管理面板\n\n\n修改你的站点目录权限\n$ cd ../\n$ chmod -R 755 你的站点域名/\n$ chown -R www:www 你的站点域名/\n\n终端执行演示\nroot@debian:/www/wwwroot/你的站点域名# cd ../\nroot@debian:/www/wwwroot# chmod -R 755 你的站点域名/\nroot@debian:/www/wwwroot# chown -R www:www 你的站点域名/\n\n\n根据提示完成安装\n8.配置站点目录及伪静态宝塔面板 &gt; 网站 &gt; 找到你的站点 点击设置 &gt; 网站目录 &gt; 运行目录 &gt; 选择 &#x2F;public 保存。宝塔面板 &gt; 网站 &gt; 找到你的站点 点击设置 &gt; 伪静态 &gt; 将伪静态规则粘贴至窗口 保存。\n\n伪静态规则\nlocation &#x2F;downloads &#123;\n&#125;\n\nlocation &#x2F; &#123;  \n    try_files $uri $uri&#x2F; &#x2F;index.php$is_args$query_string;  \n&#125;\n\nlocation ~ .*\\.(js|css)?$\n&#123;\n    expires      1h;\n    error_log off;\n    access_log &#x2F;dev&#x2F;null; \n&#125;\n\n\n9.配置定时任务宝塔面板 &gt; 计划任务\n\n在 任务类型 选择 Shell脚本\n在 任务名称 填写 v2board\n在 执行周期 选择 N分钟 1分钟\n在 脚本内容 填写 php &#x2F;www&#x2F;wwwroot&#x2F;你的站点域名&#x2F;artisan schedule:run\n\n10.启动队列服务V2board的系统强依赖队列服务，正常使用V2Board必须启动队列服务。下面以宝塔面板中PM2管理器服务来守护队列服务作为演示。宝塔面板 &gt; 软件商店 &gt; 找到并安装 PM2管理器宝塔面板 &gt; 软件商店 &gt; 找到PM2管理器 点击设置 &gt; 添加项目\n\n在 启动文件 选择 &#x2F;wwwroot&#x2F;你的站点域名&#x2F;pm2.yaml\n在 项目名称 填写 V2board 后提交。\n如果遇到报错，可以尝试多提交几次。\n\n\n\n\n\n\n\n\n\n\n完成此步骤后您可以尝试访问一下您的域名，应该能正常访问了！\n二、V2board的基础配置1.管理员页面配置V2board的管理员后台链接: http(s):&#x2F;&#x2F;你的站点域名&#x2F;admin\n(1).配置V2board通讯密钥:系统配置 &gt; 服务端 &gt; 通讯密钥\n\n在 通讯密钥 填写 16位随机密码\n\n\n\n\n\n\n\n\n\n\n后续暂时就不写了\n\n\n\n\n\n\n\n提示\n本文章采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可。\n\n","slug":"V2Board前端搭建教程","date":"2022-07-18T09:11:41.000Z","categories_index":"V2Board","tags_index":"V2Board","author_index":"Riansy"},{"id":"210f816b607327db99c7b657589ac439","title":"SSPanel-Metron前端搭建教程","content":"前言SSPanel-Metron是一个GitHub开源项目，目前由BobS9大佬进行维护和开发。它是什么我就不过多介绍了，懂的都懂！\n\n\n\n\n\n\n\n\n\n可以根据您的实际情况判断您是否需要在服务器上开启Google BBR算法，可以参考文章《在Linux系统上开启BBR加速》\n","slug":"SSPanel-Metron前端搭建教程","date":"2022-07-17T06:46:46.000Z","categories_index":"SSPanel","tags_index":"Metron","author_index":"Riansy"},{"id":"e121e1d4dc52e3ebdd9b65d941d97aa7","title":"在Linux系统上开启BBR加速","content":"前言Google BBR是一款Google开发的拥堵控制算法，通过优化和控制TCP的拥塞，充分利用带宽并降低延迟，使得服务器的带宽得到合理化应用。\n\n\n\n\n\n\n\n\n\n本篇文章我们将在CentOS7和Debian11上演示开启Google BBR的具体步骤。\n\n\n在CentOS7上开启Google BBR一、升级系统内核1.首先查看内核版本，确定自己是否需要更新内核(可略过)，版本如果大于4.9就可以不用升级，但建议升级。\n$ uname -a\n\n终端执行演示\n[root@centos ~]# uname -a\nLinux centos 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\n\n\n2.使用这个命令您可以查看系统安装的所有内核\n$ rpm -qa | grep kernel\n\n终端执行演示\n[root@centos ~]# rpm -qa | grep kernel\nkernel-devel-3.10.0-1160.el7.x86_64\nkernel-tools-libs-3.10.0-1160.el7.x86_64\nabrt-addon-kerneloops-2.1.11-60.el7.centos.x86_64\nkernel-headers-3.10.0-1160.el7.x86_64\nkernel-3.10.0-1160.el7.x86_64\nkernel-tools-3.10.0-1160.el7.x86_64\n\n\n3.启用elrepo仓库\n$ rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org #导入公共密钥\n$ rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm #安装elrepo仓库的yum源\n\n终端执行演示\n[root@centos ~]# rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org #导入公共密钥\n[root@centos ~]# rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm #安装elrepo仓库的yum源\nRetrieving http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\nRetrieving http://elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm\nPreparing...                          ################################# [100%]\nUpdating / installing...\n   1:elrepo-release-7.0-4.el7.elrepo  ################################# [100%]\n\n\n4.安装最新版本的内核\n$ yum --enablerepo=elrepo-kernel install kernel-ml -y\n\n终端执行演示\n[root@centos ~]# yum --enablerepo=elrepo-kernel install kernel-ml -y\nLoaded plugins: fastestmirror, langpacks\nLoading mirror speeds from cached hostfile\n * base: mirrors.ustc.edu.cn\n * elrepo: hkg.mirror.rackspace.com\n * elrepo-kernel: hkg.mirror.rackspace.com\n * extras: mirrors.ustc.edu.cn\n * updates: mirrors.ustc.edu.cn\nbase                                                                                                                                                                                                            | 3.6 kB  00:00:00     \nelrepo                                                                                                                                                                                                          | 3.0 kB  00:00:00     \nelrepo-kernel                                                                                                                                                                                                   | 3.0 kB  00:00:00     \nextras                                                                                                                                                                                                          | 2.9 kB  00:00:00     \nupdates                                                                                                                                                                                                         | 2.9 kB  00:00:00     \n(1/2): elrepo/primary_db                                                                                                                                                                                        | 390 kB  00:00:00     \n(2/2): elrepo-kernel/primary_db                                                                                                                                                                                 | 2.1 MB  00:00:00     \nResolving Dependencies\n--> Running transaction check\n---> Package kernel-ml.x86_64 0:5.18.12-1.el7.elrepo will be installed\n--> Finished Dependency Resolution\n\nDependencies Resolved\n\n=======================================================================================================================================================================================================================================\n Package                                              Arch                                              Version                                                         Repository                                                Size\n=======================================================================================================================================================================================================================================\nInstalling:\n kernel-ml                                            x86_64                                            5.18.12-1.el7.elrepo                                            elrepo-kernel                                             56 M\n\nTransaction Summary\n=======================================================================================================================================================================================================================================\nInstall  1 Package\n\nTotal download size: 56 M\nInstalled size: 257 M\nDownloading packages:\nkernel-ml-5.18.12-1.el7.elrepo.x86_64.rpm                                                                                                                                                                       |  56 MB  00:00:01     \nRunning transaction check\nRunning transaction test\nTransaction test succeeded\nRunning transaction\nWarning: RPMDB altered outside of yum.\n  Installing : kernel-ml-5.18.12-1.el7.elrepo.x86_64                                                                                                                                                                               1/1 \n  Verifying  : kernel-ml-5.18.12-1.el7.elrepo.x86_64                                                                                                                                                                               1/1 \n\nInstalled:\n  kernel-ml.x86_64 0:5.18.12-1.el7.elrepo                                                                                                                                                                                              \n\nComplete!\n\n\n5.查看系统已安装的所有内核，并显示序号\n$ awk -F\\' '$1==\"menuentry \" &#123;print i++ \" : \" $2&#125;' /etc/grub2.cfg\n\n终端执行演示\n[root@centos ~]# awk -F\\' '$1==\"menuentry \" &#123;print i++ \" : \" $2&#125;' /etc/grub2.cfg\n0 : CentOS Linux (5.18.12-1.el7.elrepo.x86_64) 7 (Core)\n1 : CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core)\n2 : CentOS Linux (0-rescue-73bdfa889ca64635afe9a6bad8299064) 7 (Core)\n\n\n6.设置新版本内核为默认启动并重启，后面的数字就是上一步操作显示的序号\n$ grub2-set-default 0\n\n终端执行演示\n[root@centos ~]# grub2-set-default 0\n\n\n7.生成配置文件并重启\n$ grub2-mkconfig -o /boot/grub2/grub.cfg\n$ reboot\n\n终端执行演示\n[root@centos ~]# grub2-mkconfig -o /boot/grub2/grub.cfg\nGenerating grub configuration file ...\nFound linux image: /boot/vmlinuz-5.18.12-1.el7.elrepo.x86_64\nFound initrd image: /boot/initramfs-5.18.12-1.el7.elrepo.x86_64.img\nFound linux image: /boot/vmlinuz-3.10.0-1160.el7.x86_64\nFound initrd image: /boot/initramfs-3.10.0-1160.el7.x86_64.img\nFound linux image: /boot/vmlinuz-0-rescue-73bdfa889ca64635afe9a6bad8299064\nFound initrd image: /boot/initramfs-0-rescue-73bdfa889ca64635afe9a6bad8299064.img\ndone\n[root@centos ~]# reboot\n\n\n8.过几分钟连上服务器，验证一下是否更换内核成功\n$ uname -a\n\n终端执行演示\n[root@centos ~]# uname -a\nLinux centos 5.18.12-1.el7.elrepo.x86_64 #1 SMP PREEMPT_DYNAMIC Fri Jul 15 07:03:42 EDT 2022 x86_64 x86_64 x86_64 GNU/Linux\n\n\n二、启用Google BBR1.修改&#x2F;etc&#x2F;sysctl.conf文件\n$ echo \"tcp_bbr\" >> /etc/modules-load.d/modules.conf\n$ echo \"net.core.default_qdisc=fq\" >> /etc/sysctl.conf\n$ echo \"net.ipv4.tcp_congestion_control=bbr\" >> /etc/sysctl.conf\n$ sysctl -p\n\n终端执行演示\n[root@centos ~]# echo \"tcp_bbr\" >> /etc/modules-load.d/modules.conf\n[root@centos ~]# echo \"net.core.default_qdisc=fq\" >> /etc/sysctl.conf\n[root@centos ~]# echo \"net.ipv4.tcp_congestion_control=bbr\" >> /etc/sysctl.conf\n[root@centos ~]# sysctl -p\nnet.core.default_qdisc = fq\nnet.ipv4.tcp_congestion_control = bbr\n\n\n2.验证BBR是否开启\n$ sysctl net.ipv4.tcp_available_congestion_control\n$ lsmod | grep bbr\n\n终端执行演示\n[root@centos ~]# sysctl net.ipv4.tcp_available_congestion_control\nnet.ipv4.tcp_available_congestion_control = reno cubic bbr\n[root@centos ~]# lsmod | grep bbr\ntcp_bbr                20480  1 \n\n\n注意 \n\nGoogle BBR只支持使用syctemctl命令的系统，所以CentOS只支持7以上版本。\nCentOS系统默认的内核版本较低，所以需要先更新系统内核。\n升级完后可以删除旧的系统内核，参考以下(以实际内核名称为准)：\n\n$ rpm -ev kernel-devel-3.10.0-1160.el7.x86_64\n$ rpm -ev kernel-3.10.0-1160.el7.x86_64\n\n\n\n\n\n\n\n\n\n\n如果已经完成以上步骤，恭喜您的CentOS系统已经开启Google BBR算法\n在Debian上开启Google BBR一、升级系统内核注意事项\n\n这一节纯属个人习惯，完全可略过。\nDebian11的系统内核版本大于4.9，所以可以不用更新内核。但是听说越新的内核越高效，自行斟酌～\n在Debian系统上的操作默认使用root用户。\n\n1.首先检查系统更新\n$ apt update &amp;&amp; apt full-upgrade -y\n\n终端执行演示\nroot@debian:~# apt update &amp;&amp; apt full-upgrade -y\nGet:1 http://mirrors.tencentyun.com/debian bullseye InRelease [116 kB]\nGet:2 http://mirrors.tencentyun.com/debian bullseye-updates InRelease [39.4 kB]\nGet:3 http://mirrors.tencentyun.com/debian-security bullseye-security InRelease [44.1 kB]\nGet:4 http://mirrors.tencentyun.com/debian bullseye-backports InRelease [44.2 kB]\nGet:5 http://mirrors.tencentyun.com/debian bullseye-proposed-updates InRelease [44.6 kB]\nGet:6 http://mirrors.tencentyun.com/debian bullseye/main amd64 Packages [8,182 kB]\nGet:7 http://mirrors.tencentyun.com/debian bullseye/main Translation-en [6,243 kB]\nGet:8 http://mirrors.tencentyun.com/debian bullseye/contrib amd64 Packages [50.6 kB]\nGet:9 http://mirrors.tencentyun.com/debian bullseye/contrib Translation-en [46.9 kB]\n...省略\nSetting up gpg-wks-server (2.2.27-2+deb11u2) ...\nSetting up linux-headers-5.10.0-16-amd64 (5.10.127-1) ...\nSetting up gpg-wks-client (2.2.27-2+deb11u2) ...\nSetting up linux-headers-amd64 (5.10.127-1) ...\nSetting up gnupg (2.2.27-2+deb11u2) ...\nProcessing triggers for man-db (2.9.4-2) ...\nProcessing triggers for libc-bin (2.31-13+deb11u3) ...\n\n\n2.安装默认版本的内核，安装之前请先确认当前的内核版本\n$ apt install -t $(lsb_release -sc)-backports linux-image-$(dpkg --print-architecture) linux-headers-$(dpkg --print-architecture) --install-recommends -y\n\n终端执行演示\nroot@VM-8-5-debian:~# apt install -t $(lsb_release -sc)-backports linux-image-$(dpkg --print-architecture) linux-headers-$(dpkg --print-architecture) --install-recommends -y\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nThe following packages were automatically installed and are no longer required:\n  cloud-guest-utils cloud-image-utils cloud-utils distro-info gdisk genisoimage liburing1 qemu-utils\nUse 'apt autoremove' to remove them.\nThe following additional packages will be installed:\n  linux-headers-5.18.0-0.bpo.1-amd64 linux-headers-5.18.0-0.bpo.1-common linux-image-5.18.0-0.bpo.1-amd64 linux-kbuild-5.18\nSuggested packages:\n  linux-doc-5.18 debian-kernel-handbook\nThe following NEW packages will be installed:\n  linux-headers-5.18.0-0.bpo.1-amd64 linux-headers-5.18.0-0.bpo.1-common linux-image-5.18.0-0.bpo.1-amd64 linux-kbuild-5.18\nThe following packages will be upgraded:\n  linux-headers-amd64 linux-image-amd64\n2 upgraded, 4 newly installed, 0 to remove and 36 not upgraded.\nNeed to get 80.6 MB of archives.\n...省略\nGenerating grub configuration file ...\nFound linux image: /boot/vmlinuz-5.18.0-0.bpo.1-amd64\nFound initrd image: /boot/initrd.img-5.18.0-0.bpo.1-amd64\nFound linux image: /boot/vmlinuz-5.10.0-16-amd64\nFound initrd image: /boot/initrd.img-5.10.0-16-amd64\nFound linux image: /boot/vmlinuz-5.10.0-12-amd64\nFound initrd image: /boot/initrd.img-5.10.0-12-amd64\ndone\nSetting up linux-headers-amd64 (5.18.2-1~bpo11+1) ...\nSetting up linux-image-amd64 (5.18.2-1~bpo11+1) ...\n\n\n3.更新内核启动顺序\n$ update-grub\n\n终端执行演示\nroot@debian:~# update-grub\nGenerating grub configuration file ...\nFound linux image: /boot/vmlinuz-5.18.0-0.bpo.1-amd64\nFound initrd image: /boot/initrd.img-5.18.0-0.bpo.1-amd64\nFound linux image: /boot/vmlinuz-5.10.0-16-amd64\nFound initrd image: /boot/initrd.img-5.10.0-16-amd64\nFound linux image: /boot/vmlinuz-5.10.0-12-amd64\nFound initrd image: /boot/initrd.img-5.10.0-12-amd64\ndone\n\n\n二、启用Google BBR1.修改&#x2F;etc&#x2F;sysctl.conf文件\n$ echo \"net.core.default_qdisc=fq\" >> /etc/sysctl.conf\n$ echo \"net.ipv4.tcp_congestion_control=bbr\" >> /etc/sysctl.conf\n$ sysctl -p\n\n终端执行演示\nroot@debian:~# echo \"net.core.default_qdisc=fq\" >> /etc/sysctl.conf\nroot@debian:~# echo \"net.ipv4.tcp_congestion_control=bbr\" >> /etc/sysctl.conf\nroot@debian:~# sysctl -p\nkernel.core_uses_pid = 1\nnet.ipv4.ip_forward = 0\nnet.ipv6.conf.all.forwarding = 0\nnet.ipv4.conf.default.rp_filter = 1\nkernel.msgmnb = 65536\nkernel.msgmax = 65536\nnet.ipv4.conf.default.accept_source_route = 0\nnet.ipv4.tcp_syncookies = 1\nnet.ipv6.conf.all.disable_ipv6 = 0\nnet.ipv6.conf.default.disable_ipv6 = 0\nnet.ipv6.conf.lo.disable_ipv6 = 0\nnet.ipv4.conf.all.promote_secondaries = 1\nnet.ipv4.conf.default.promote_secondaries = 1\nnet.ipv6.neigh.default.gc_thresh3 = 4096\nnet.ipv4.neigh.default.gc_thresh3 = 4096\nkernel.printk = 5 4 1 7\nkernel.softlockup_panic = 1\nkernel.sysrq = 1\nnet.core.default_qdisc = fq\nnet.ipv4.tcp_congestion_control = bbr\n\n\n2.验证BBR是否开启\n$ sysctl net.ipv4.tcp_available_congestion_control\n$ lsmod | grep bbr\n$ reboot\n\n终端执行演示\nroot@debian:~# sysctl net.ipv4.tcp_available_congestion_control\nnet.ipv4.tcp_available_congestion_control = reno cubic bbr\nroot@debian:~# lsmod | grep bbr\ntcp_bbr                20480  1\nroot@debian:~# reboot\n\n\n\n\n\n\n\n\n\n\n\n如果已经完成以上步骤，恭喜您的Debian系统已经开启Google BBR算法\n\n\n\n\n\n\n\n提示\n本文章采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可。\n\n","slug":"在Linux系统上开启BBR加速","date":"2022-07-17T06:46:34.000Z","categories_index":"System","tags_index":"CentOS,Debian,Linux","author_index":"Riansy"}]